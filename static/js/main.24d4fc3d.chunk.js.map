{"version":3,"sources":["components/app-bar/app-bar.tsx","components/command-bar/command-bar.tsx","hooks/useToggle.tsx","components/json-editor/styles.ts","components/json-editor/components/error-message-bar/error-message-bar.tsx","components/json-editor/components/title-bar/title-bar.tsx","components/json-editor/components/tool-bar/tool-bar.tsx","components/json-editor/utils/file.tsx","components/json-editor/utils/json-string.tsx","components/json-editor/json-editor.tsx","components/json-editor/mock-data.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppBar","items","key","text","onRender","Text","variant","nowrap","block","CommandBar","styles","root","alignItems","ariaLabel","CommandBarComponent","isSchemaEditorOn","onSchemaEditorChange","isSchemaSampleDataOn","onSchemaSampleDataOn","leftItems","CommandButton","Checkbox","label","onChange","checked","useToggle","initialValue","React","useState","toggled","setToggled","toggle","useCallback","v","BorderLine","classNames","mergeStyleSets","wrapper","height","position","maxHeight","headerStyle","padding","borderTop","onRenderDetailsHeader","props","defaultRender","Sticky","stickyPosition","StickyPositionType","Header","isScrollSynced","ErrorMessageBar","errors","map","error","uuid","problems","columns","name","length","fieldName","minWidth","maxWidth","isResizable","ScrollablePane","scrollbarVisibility","ScrollbarVisibility","auto","className","DetailsList","compact","checkboxVisibility","TitleBar","title","FileUploader","onFileHandle","inputFileRef","useRef","iconProps","iconName","onClick","current","value","click","ref","style","display","e","target","files","fileUploaded","type","accept","ToolBar","onMinifyClick","onPrettifyClick","isAutoPrettifyOn","onAutoPrettifyChange","onClearClick","onDownloadClick","onUploadClick","isValidJson","disabled","downloadJsonFile","jsonString","a","fileName","blob","Blob","window","navigator","msSaveOrOpenBlob","link","document","createElement","body","appendChild","URL","createObjectURL","href","download","removeChild","console","log","parseJsonSchemaString","JSON","parse","err","stackStyles","borderRight","borderBottom","JSONEditor","defaultValue","schemaValue","path","monaco","useMonaco","setErrors","toggleAutoPrettifyOn","setIsValidJson","editorRef","updateEditorLayout","editor","layout","width","editorEl","_domElement","getBoundingClientRect","handleJsonSchemasUpdate","languages","json","jsonDefaults","setDiagnosticsOptions","validate","schemas","uri","fileMatch","schema","undefined","handleEditorPrettify","getAction","run","handleEditorUpdateValue","setValue","useEffect","handleEditorValidation","markers","errorMessage","startLineNumber","message","hasContent","getValue","hasError","handleEditorChange","Stack","Item","minifiedValue","stringify","minifyJsonString","file","fileReader","FileReader","onload","result","readAsText","grow","align","language","options","automaticLayout","autoClosingBrackets","autoClosingQuotes","formatOnPaste","formatOnType","scrollBeyondLastLine","onMount","getModel","updateOptions","tabSize","insertSpaces","addEventListener","prettifyJsonString","beforeMount","onValidate","SampleData","containerStyle","editorStackStyle","getEditorClassNames","isFullWidth","App","toggleASchemaEditorOn","toggleSchemaSampleDataOn","wrap","horizontal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","initializeIcons"],"mappings":"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","file":"static/js/main.24d4fc3d.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { CommandBar, ICommandBarItemProps, Text } from \"@fluentui/react\";\n\nexport const AppBar = (): JSX.Element => {\n  const items: ICommandBarItemProps[] = [\n    {\n      key: \"title\",\n      text: \"title\",\n      onRender: () => (\n        <Text variant=\"xLarge\" nowrap block>\n          JSON Online Editor\n        </Text>\n      ),\n    },\n  ];\n  return (\n    <CommandBar\n      styles={{\n        root: {\n          alignItems: \"center\",\n        },\n      }}\n      ariaLabel=\"app title\"\n      items={items}\n    />\n  );\n};\n","import React from \"react\";\n\nimport {\n  CommandBar,\n  CommandButton,\n  Checkbox,\n  // DefaultButton,\n  ICommandBarItemProps,\n  // IIconProps,\n} from \"@fluentui/react\";\n\nexport interface CommandBarComponentProps {\n  isSchemaEditorOn: boolean;\n  onSchemaEditorChange: () => void;\n  isSchemaSampleDataOn: boolean;\n  onSchemaSampleDataOn: () => void;\n}\n\nexport const CommandBarComponent: React.FC<CommandBarComponentProps> = ({\n  isSchemaEditorOn,\n  onSchemaEditorChange,\n  isSchemaSampleDataOn,\n  onSchemaSampleDataOn,\n}) => {\n  const leftItems: ICommandBarItemProps[] = [\n    {\n      key: \"use-json-schema\",\n      onRender: () => (\n        <CommandButton>\n          <Checkbox\n            label=\"Use JSON Schema\"\n            onChange={onSchemaEditorChange}\n            checked={isSchemaEditorOn}\n          />\n        </CommandButton>\n      ),\n    },\n    {\n      key: \"use-json-schema-sample-data\",\n      onRender: () =>\n        isSchemaEditorOn && (\n          <CommandButton>\n            <Checkbox\n              label=\"Use Sample Schema Data\"\n              onChange={onSchemaSampleDataOn}\n              checked={isSchemaSampleDataOn}\n            />\n          </CommandButton>\n        ),\n    },\n  ];\n\n  return (\n    <div>\n      <CommandBar\n        styles={{\n          root: {\n            alignItems: \"center\",\n          },\n        }}\n        items={leftItems}\n        // farItems={rightItems}\n        ariaLabel=\"json content commands\"\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\ntype CallbackType = (...args: string[]) => void;\n\nexport const useToggle = (initialValue = false): [boolean, () => void] => {\n  const [toggled, setToggled] = React.useState<boolean>(initialValue);\n  const toggle = React.useCallback<CallbackType>(() => {\n    setToggled((v) => !v);\n  }, []);\n  return [toggled, toggle];\n};\n","export const BorderLine = \"1px solid rgb(237, 235, 233)\";\n","import React from \"react\";\n\nimport {\n  DetailsList,\n  ScrollablePane,\n  ScrollbarVisibility,\n  Sticky,\n  StickyPositionType,\n  mergeStyleSets,\n  IDetailsHeaderProps,\n  IRenderFunction,\n  IColumn,\n} from \"@fluentui/react\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { BorderLine } from \"../../styles\";\n\ninterface ErrorMessageBarProps {\n  errors: string[];\n}\n\nconst classNames = mergeStyleSets({\n  wrapper: {\n    height: \"20vh\",\n    position: \"relative\",\n    maxHeight: \"inherit\",\n  },\n});\n\nconst headerStyle = {\n  root: {\n    padding: 0,\n    borderTop: BorderLine,\n  },\n};\n\nconst onRenderDetailsHeader: IRenderFunction<IDetailsHeaderProps> = (\n  props,\n  defaultRender\n) => {\n  if (!props) return null;\n  return (\n    <Sticky stickyPosition={StickyPositionType.Header} isScrollSynced>\n      {defaultRender!({\n        ...props,\n        styles: headerStyle,\n      })}\n    </Sticky>\n  );\n};\n\nexport const ErrorMessageBar: React.FC<ErrorMessageBarProps> = ({\n  errors,\n}): JSX.Element => {\n  const items = errors.map((error) => ({\n    key: `error-${uuid()}`,\n    problems: error,\n  }));\n\n  const columns: IColumn[] = [\n    {\n      key: \"problems\",\n      name: `Problems (${errors.length})`,\n      fieldName: \"problems\",\n      minWidth: 300,\n      maxWidth: 300,\n      isResizable: true,\n    },\n  ];\n\n  return (\n    <ScrollablePane\n      scrollbarVisibility={ScrollbarVisibility.auto}\n      className={classNames.wrapper}\n    >\n      <DetailsList\n        compact\n        items={items}\n        columns={columns}\n        checkboxVisibility={2}\n        onRenderDetailsHeader={onRenderDetailsHeader}\n      />\n    </ScrollablePane>\n  );\n};\n","import React from \"react\";\n\nimport { CommandBar, ICommandBarItemProps, Text } from \"@fluentui/react\";\n\ninterface TitleBarProps {\n  title: string;\n}\nexport const TitleBar: React.FC<TitleBarProps> = ({ title }): JSX.Element => {\n  const items: ICommandBarItemProps[] = [\n    {\n      key: title,\n      text: title,\n      onRender: () => (\n        <Text variant=\"large\" nowrap block>\n          {title}\n        </Text>\n      ),\n    },\n  ];\n  return (\n    <CommandBar\n      styles={{\n        root: {\n          alignItems: \"center\",\n        },\n      }}\n      ariaLabel=\"app title\"\n      items={items}\n    />\n  );\n};\n","import React, { useRef } from \"react\";\n\nimport {\n  CommandBar,\n  ICommandBarItemProps,\n  CommandButton,\n  Checkbox,\n  IIconProps,\n} from \"@fluentui/react\";\n\nexport interface ToolBarProps {\n  onMinifyClick: () => void;\n  onPrettifyClick: () => void;\n  isAutoPrettifyOn: boolean;\n  onClearClick: () => void;\n  onAutoPrettifyChange: () => void;\n  onDownloadClick: () => void;\n  onUploadClick: (fileContent: File) => void;\n  isValidJson: boolean;\n}\n\ninterface FileUploaderProps {\n  onFileHandle: (fileContent: File) => void;\n}\n\n// Need to fix: hover is not working\nexport const FileUploader: React.FC<FileUploaderProps> = ({ onFileHandle }) => {\n  const inputFileRef = useRef<HTMLInputElement>(null);\n\n  const handleUploadClick = () => {\n    if (inputFileRef.current) {\n      // upload the same file\n      inputFileRef.current.value = \"\";\n      inputFileRef.current.click();\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n    const fileUploaded = e.target.files[0];\n    onFileHandle(fileUploaded);\n  };\n\n  const uploadIcon: IIconProps = { iconName: \"Upload\" };\n\n  return (\n    <>\n      <CommandButton\n        iconProps={uploadIcon}\n        text=\"Upload\"\n        onClick={handleUploadClick}\n      />\n      <input\n        ref={inputFileRef}\n        style={{ display: \"none\" }}\n        onChange={handleChange}\n        type=\"file\"\n        accept=\"application/json\"\n      />\n    </>\n  );\n};\n\nexport const ToolBar: React.FC<ToolBarProps> = ({\n  onMinifyClick,\n  onPrettifyClick,\n  isAutoPrettifyOn,\n  onAutoPrettifyChange,\n  onClearClick,\n  onDownloadClick,\n  onUploadClick,\n  isValidJson,\n}) => {\n  const leftItems: ICommandBarItemProps[] = [\n    {\n      key: \"upload\",\n      onRender: () => <FileUploader onFileHandle={onUploadClick} />,\n    },\n    {\n      key: \"download\",\n      text: \"Download\",\n      ariaLabel: \"Grid view\",\n      iconProps: { iconName: \"Download\" },\n      onClick: onDownloadClick,\n      disabled: !isValidJson,\n    },\n    {\n      key: \"clear\",\n      text: \"Clear\",\n      iconProps: { iconName: \"Delete\" },\n      onClick: onClearClick,\n    },\n    {\n      key: \"minify\",\n      text: \"Minify\",\n      iconProps: { iconName: \"MinimumValue\" },\n      onClick: onMinifyClick,\n      disabled: !isValidJson || isAutoPrettifyOn,\n    },\n    {\n      key: \"prettify\",\n      text: \"Prettify\",\n      iconProps: { iconName: \"MaximumValue\" },\n      onClick: onPrettifyClick,\n      disabled: !isValidJson || isAutoPrettifyOn,\n    },\n    {\n      key: \"auto-prettify\",\n      onRender: () => (\n        <CommandButton>\n          <Checkbox\n            label=\"Auto Prettify\"\n            onChange={onAutoPrettifyChange}\n            checked={isAutoPrettifyOn}\n          />\n        </CommandButton>\n      ),\n    },\n  ];\n\n  return (\n    <CommandBar\n      styles={{\n        root: {\n          alignItems: \"center\",\n          // borderTop: \"1px solid rgb(237, 235, 233)\",\n        },\n      }}\n      items={leftItems}\n      ariaLabel=\"json content commands\"\n    />\n  );\n};\n","import { v4 as uuid } from \"uuid\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const downloadJsonFile = async (jsonString: string) => {\n  const fileName = uuid();\n  // Set the HREF to a Blob representation of the data to be downloaded\n  const blob = new Blob([jsonString], { type: \"application/json\" });\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    // for IE\n    window.navigator.msSaveOrOpenBlob(blob, fileName);\n  } else {\n    // for Non-IE (chrome, firefox etc.)\n\n    try {\n      // create an invisible A element\n      const link = document.createElement(\"a\");\n      link.style.display = \"none\";\n      document.body.appendChild(link);\n\n      const href = await window.URL.createObjectURL(blob);\n      // blob ready, download it\n      link.href = href;\n      link.download = `${fileName}.json`;\n\n      // trigger the download by simulating click\n      link.click();\n\n      // cleanup\n      window.document.body.removeChild(link);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.log(\"Error: fail to download a file.\");\n    }\n  }\n};\n","/**\n * Minify a Json string\n */\nexport const minifyJsonString = (jsonString: string): string => {\n  try {\n    return JSON.stringify(JSON.parse(jsonString), null);\n  } catch (err) {\n    return jsonString;\n  }\n};\n\n/**\n * Prettify/Format Json string\n */\nexport const prettifyJsonString = (jsonString: string): string => {\n  try {\n    return JSON.stringify(JSON.parse(jsonString), null, \"\\t\");\n  } catch (err) {\n    return jsonString;\n  }\n};\n\nexport const parseJsonSchemaString = (\n  jsonString: string\n): Record<string, unknown> => {\n  try {\n    return JSON.parse(jsonString);\n  } catch (err) {\n    // try to throw a more detailed error message using validate\n    // validateString(jsonString);\n    // rethrow the original error\n    return {};\n  }\n};\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport { Stack, IStackStyles } from \"@fluentui/react\";\nimport Editor, {\n  useMonaco,\n  BeforeMount,\n  OnMount,\n  OnValidate,\n} from \"@monaco-editor/react\";\nimport * as Monaco from \"monaco-editor/esm/vs/editor/editor.api\";\n\nimport { useToggle } from \"../../hooks\";\nimport { ErrorMessageBar } from \"./components/error-message-bar\";\nimport { TitleBar } from \"./components/title-bar\";\nimport { ToolBar } from \"./components/tool-bar\";\nimport { BorderLine } from \"./styles\";\nimport {\n  downloadJsonFile,\n  minifyJsonString,\n  prettifyJsonString,\n  parseJsonSchemaString,\n} from \"./utils\";\n\nconst stackStyles: IStackStyles = {\n  root: {\n    height: \"100%\",\n    borderTop: BorderLine,\n    borderRight: BorderLine,\n    borderBottom: BorderLine,\n  },\n};\n\ninterface JSONEditorProps {\n  defaultValue?: string;\n  schemaValue?: string;\n  title?: string;\n  path?: string;\n}\n\ninterface RefObject extends Monaco.editor.ICodeEditor {\n  _domElement?: HTMLElement;\n}\n\nexport const JSONEditor: React.FC<JSONEditorProps> = ({\n  defaultValue,\n  schemaValue,\n  title,\n  path,\n}): JSX.Element => {\n  const monaco = useMonaco();\n\n  const [errors, setErrors] = useState<string[]>([]);\n  const [isAutoPrettifyOn, toggleAutoPrettifyOn] = useToggle(false);\n  const [isValidJson, setIsValidJson] = useState<boolean>(false);\n  const editorRef = useRef<RefObject | null>(null);\n\n  const updateEditorLayout = useCallback(() => {\n    // Type BUG: editor.IDimension.width & editor.IDimension.height should be \"number\"\n    // but it needs to have \"auto\" otherwise layout can't be updated;\n    // eslint-disable-next-line\n    const editor: any = editorRef.current;\n    if (!editor) return;\n    // Initialize layout's width and height\n    editor.layout({\n      width: \"auto\",\n      height: \"auto\",\n    });\n    // eslint-disable-next-line\n    const editorEl = editor._domElement;\n    if (!editorEl) return;\n    const { width, height } = editorEl.getBoundingClientRect();\n    // update responsive width and height\n    editor.layout({\n      width,\n      height,\n    });\n  }, []);\n\n  const handleJsonSchemasUpdate = useCallback(() => {\n    monaco?.languages.json.jsonDefaults.setDiagnosticsOptions({\n      validate: true,\n      schemas: schemaValue\n        ? [\n            {\n              uri: \"http://myserver/foo-schema.json\", // id of the first schema\n              fileMatch: [\"*\"], // associate with our model\n              schema: {\n                ...parseJsonSchemaString(schemaValue),\n              },\n            },\n          ]\n        : undefined,\n    });\n  }, [schemaValue, monaco]);\n\n  const handleEditorPrettify = useCallback(() => {\n    editorRef.current?.getAction(\"editor.action.formatDocument\").run();\n  }, []);\n\n  const handleEditorUpdateValue = useCallback((value?: string) => {\n    const editor = editorRef.current;\n    if (!editor) return;\n    editor.setValue(value || \"\");\n    value && editor.getAction(\"editor.action.formatDocument\").run();\n  }, []);\n\n  const handleClearClick = () => editorRef.current?.setValue(\"\");\n\n  const handleEditorWillMount: BeforeMount = () => handleJsonSchemasUpdate();\n\n  const handleEditorDidMount: OnMount = (editor) => {\n    editorRef.current = editor;\n\n    editor.getModel()?.updateOptions({ tabSize: 2, insertSpaces: false });\n\n    window.addEventListener(\"resize\", () => {\n      // automaticLayout isn't working\n      // https://github.com/suren-atoyan/monaco-react/issues/89#issuecomment-666581193\n      // clear current layout\n      updateEditorLayout();\n    });\n\n    // need to use formatted prettify json string\n    defaultValue && handleEditorUpdateValue(prettifyJsonString(defaultValue));\n  };\n\n  useEffect(() => {\n    handleEditorUpdateValue(defaultValue);\n  }, [defaultValue, handleEditorUpdateValue]);\n\n  useEffect(() => {\n    handleJsonSchemasUpdate();\n  }, [schemaValue, handleJsonSchemasUpdate]);\n\n  useEffect(() => {\n    isAutoPrettifyOn && handleEditorPrettify();\n  }, [isAutoPrettifyOn, handleEditorPrettify]);\n\n  const handleEditorValidation: OnValidate = useCallback((markers) => {\n    const errorMessage = markers.map(\n      ({ startLineNumber, message }) => `line ${startLineNumber}: ${message}`\n    );\n    const hasContent = editorRef.current?.getValue();\n    const hasError: boolean = errorMessage.length > 0;\n    setIsValidJson(!!hasContent && !hasError);\n    setErrors(errorMessage);\n  }, []);\n\n  const handleMinifyClick = () => {\n    const editor = editorRef.current;\n    if (!editor) return;\n    const value = editor.getValue();\n    const minifiedValue = minifyJsonString(value);\n    editor.setValue(minifiedValue);\n  };\n\n  const handleUploadClick = (file: File) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const result = fileReader.result as string;\n      handleEditorUpdateValue(result);\n    };\n    fileReader.readAsText(file);\n  };\n\n  const handleDownloadClick = () => {\n    const value = editorRef.current?.getValue();\n    value && downloadJsonFile(value);\n  };\n\n  const handleEditorChange = useCallback(() => {\n    isAutoPrettifyOn && handleEditorPrettify();\n  }, [isAutoPrettifyOn, handleEditorPrettify]);\n\n  return (\n    <Stack styles={stackStyles}>\n      {title && (\n        <Stack.Item>\n          <TitleBar title={title} />\n        </Stack.Item>\n      )}\n      <Stack.Item>\n        <ToolBar\n          isValidJson={isValidJson}\n          isAutoPrettifyOn={isAutoPrettifyOn}\n          onAutoPrettifyChange={toggleAutoPrettifyOn}\n          onClearClick={handleClearClick}\n          onDownloadClick={handleDownloadClick}\n          onMinifyClick={handleMinifyClick}\n          onPrettifyClick={handleEditorPrettify}\n          onUploadClick={handleUploadClick}\n        />\n      </Stack.Item>\n      <Stack styles={stackStyles}>\n        <Stack.Item grow align=\"stretch\">\n          <Editor\n            language=\"json\"\n            path={path}\n            options={{\n              automaticLayout: true,\n              autoClosingBrackets: \"always\",\n              autoClosingQuotes: \"always\",\n              formatOnPaste: true,\n              formatOnType: true,\n              scrollBeyondLastLine: false,\n            }}\n            onMount={handleEditorDidMount}\n            onChange={handleEditorChange}\n            beforeMount={handleEditorWillMount}\n            onValidate={handleEditorValidation}\n          />\n        </Stack.Item>\n        <Stack.Item>\n          <ErrorMessageBar errors={errors} />\n        </Stack.Item>\n      </Stack>\n    </Stack>\n  );\n};\n","export const validFormattedJsonInput = `{\n\t\"name\": \"Lucrezia Nethersole\",\n\t\"email\": \"l.nethersole@hotmail.com\",\n\t\"date_of_birth\": \"2007–01–23\"\n}`;\n\nexport const invalidFormattedJsonInput = `\n\t\"name\": \"Lucrezia Nethersole\",\n\t\"email\": \"l.nethersole@hotmail.com\",\n\t\"date_of_birth\": \"2007–01–23\"\n}`;\n\nexport const validMinifiedJsonInput = `{\"name\":\"Lucrezia Nethersole\",\"email\":\"l.nethersole@hotmail.com\",\"date_of_birth\":\"2007–01–23\"}`;\n\nexport const invalidMinifiedJsonInput = `name\":\"Lucrezia Nethersole\",\"email\":\"l.nethersole@hotmail.com\",\"date_of_birth\":\"2007–01–23\"}`;\n\nexport const schema = `{ \"name\": \"sample schema\", \"type\": \"object\", \"properties\": { \"name\": { \"title\": \"Name\", \"type\": \"string\", \"description\": \"Users full name supporting unicode but no emojis.\", \"maxLength\": 20 }, \"email\": { \"title\": \"Email\", \"description\": \"Like a postal address but for computers.\", \"type\": \"string\", \"format\": \"email\" }, \"date_of_birth\": { \"title\": \"Date Of Birth\", \"type\": \"string\", \"description\": \"Date of uses birth in the one and only date standard: ISO 8601.\", \"format\": \"date\", \"example\": \"1990–12–28\" } }, \"required\": [ \"name\" ] }`;\n\nexport const SampleData = {\n  jsonInput: validMinifiedJsonInput,\n  schema,\n};\n","import React, { useEffect } from \"react\";\n\nimport { Stack, IStackStyles, mergeStyleSets } from \"@fluentui/react\";\n\nimport { AppBar } from \"./components/app-bar\";\nimport { CommandBar } from \"./components/command-bar\";\nimport { JSONEditor } from \"./components/json-editor\";\nimport { SampleData } from \"./components/json-editor/mock-data\";\nimport { useToggle } from \"./hooks\";\n// Mutating styles definition\nconst containerStyle: IStackStyles = {\n  root: {\n    height: \"100vh\",\n  },\n};\n\nconst editorStackStyle: IStackStyles = {\n  root: {\n    height: \"100%\",\n  },\n};\n\nexport const getEditorClassNames = (isFullWidth: boolean) => {\n  return mergeStyleSets({\n    root: [\n      {\n        width: \"50%\",\n        height: \"100%\",\n      },\n      isFullWidth && {\n        width: \"100%\",\n        height: \"100%\",\n      },\n    ],\n  });\n};\n\nconst App = (): JSX.Element => {\n  const [isSchemaEditorOn, toggleASchemaEditorOn] = useToggle(false);\n  const [isSchemaSampleDataOn, toggleSchemaSampleDataOn] = useToggle(false);\n\n  useEffect(() => {\n    if (!isSchemaEditorOn && isSchemaSampleDataOn) {\n      toggleSchemaSampleDataOn();\n    }\n  }, [isSchemaEditorOn, isSchemaSampleDataOn, toggleSchemaSampleDataOn]);\n\n  return (\n    <Stack styles={containerStyle}>\n      <Stack.Item>\n        <AppBar />\n        <CommandBar\n          isSchemaEditorOn={isSchemaEditorOn}\n          onSchemaEditorChange={toggleASchemaEditorOn}\n          isSchemaSampleDataOn={isSchemaSampleDataOn}\n          onSchemaSampleDataOn={toggleSchemaSampleDataOn}\n        />\n      </Stack.Item>\n      <Stack wrap horizontal grow styles={editorStackStyle}>\n        {isSchemaEditorOn && (\n          <Stack.Item styles={getEditorClassNames(!isSchemaEditorOn)}>\n            <JSONEditor\n              title=\"Schema\"\n              path=\"schema.json\"\n              defaultValue={\n                isSchemaSampleDataOn ? SampleData.schema : undefined\n              }\n            />\n          </Stack.Item>\n        )}\n        <Stack.Item styles={getEditorClassNames(!isSchemaEditorOn)}>\n          <JSONEditor\n            title={isSchemaEditorOn ? \"Input JSON\" : \"\"}\n            path=\"input_json.json\"\n            schemaValue={isSchemaSampleDataOn ? SampleData.schema : undefined}\n            defaultValue={\n              isSchemaSampleDataOn ? SampleData.jsonInput : undefined\n            }\n          />\n        </Stack.Item>\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nimport { initializeIcons } from \"@fluentui/react/lib/Icons\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// Library icon registration\ninitializeIcons();\n"],"sourceRoot":""}